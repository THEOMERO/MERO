redis = require('redis') 

https = require ("ssl.https") 

serpent = dofile("./library/serpent.lua") 

json = dofile("./library/JSON.lua") 

JSON  = dofile("./library/dkjson.lua")

URL = require('socket.url')  

utf8 = require ('lua-utf8') 

database = redis.connect('127.0.0.1', 6379) 

id_server = io.popen("echo $SSH_CLIENT | awk '{ print $1}'"):read('*a')

--------------------------------------------------------------------------------------------------------------

local AutoSet = function() 

local create = function(data, file, uglify)  

file = io.open(file, "w+")   

local serialized   

if not uglify then  

serialized = serpent.block(data, {comment = false, name = "Info"})  

else  

serialized = serpent.dump(data)  

end    

file:write(serialized)    

file:close()  

end  

if not database:get(id_server..":token") then

io.write('\27[1;33m\n ارسل لي توكن البوت الان ↓ :\na┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ \n\27[0;33;49m')

local token = io.read()

if token ~= '' then

local url , res = https.request('https://api.telegram.org/bot'..token..'/getMe')

if res ~= 200 then

print('\27[1;31m⊶─────≺⋆≻─────⊷\n التوكن غير صحيح تاكد منه ثم ارسله')

else

io.write('\27[1;33m تم حفظ التوكن بنجاح \na⊶─────≺⋆≻─────⊷\n27[0;39;49m')

database:set(id_server..":token",token)

end 

else

print('\27[1;31m⊶─────≺⋆≻─────⊷\n لم يتم حفظ التوكن ارسل لي التوكن الان')

end 

os.execute('lua MERO.lua')

end

if not database:get(id_server..":SUDO:ID") then

io.write('\27[1;33m\n ارسل لي ايدي المطور الاساسي ↓ :\na⊶─────≺⋆≻─────⊷\n\27[0;33;49m')

local SUDOID = io.read()

if SUDOID ~= '' then

io.write('\27[1;33m تم حفظ ايدي المطور الاساسي \na⊶─────≺⋆≻─────⊷\n27[0;39;49m')

database:set(id_server..":SUDO:ID",SUDOID)

else

print('\27[1;31m⊶─────≺⋆≻─────⊷\n لم يتم حفظ ايدي المطور الاساسي ارسله مره اخره')

end 

os.execute('lua MERO.lua')

end

if not database:get(id_server..":SUDO:USERNAME") then

io.write('\27[1;31m ↓ ارسل معرف المطور الاساسي :\n SEND ID FOR SIDO : \27[0;39;49m')

local SUDOUSERNAME = io.read():gsub('@','')

if SUDOUSERNAME ~= '' then

io.write('\n\27[1;34m تم حفظ معرف المطور :\n\27[0;39;49m')

database:set(id_server..":SUDO:USERNAME",'@'..SUDOUSERNAME)

else

print('\n\27[1;34m لم يتم حفظ معرف المطور :')

end 

os.execute('lua MERO.lua')

end

local create_config_auto = function()

config = {

token = database:get(id_server..":token"),

SUDO = database:get(id_server..":SUDO:ID"),

UserName = database:get(id_server..":SUDO:USERNAME"),

 }

create(config, "./Info.lua")   

end 

create_config_auto()

token = database:get(id_server..":token")

SUDO = database:get(id_server..":SUDO:ID")

install = io.popen("whoami"):read('*a'):gsub('[\n\r]+', '') 

print('\n\27[1;34m doneeeeeeee senddddddddddddd :')

file = io.open("MERO", "w")  

file:write([[

#!/usr/bin/env bash

cd $HOME/MERO

token="]]..database:get(id_server..":token")..[["

while(true) do

rm -fr ../.telegram-cli

if [ ! -f ./tg ]; then

echo "┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉┉ ┉ ┉ ┉ ┉ ┉ ┉"

echo "TG IS NOT FIND IN FILES BOT"

echo "┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉"

exit 1

fi

if [ ! $token ]; then

echo "┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉"

echo -e "\e[1;36mTOKEN IS NOT FIND IN FILE INFO.LUA \e[0m"

echo "┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉┉ ┉ ┉ ┉ ┉ ┉ ┉ ┉┉ ┉"

exit 1

fi

echo -e "\033[38;5;208m"

echo -e "                                                  "

echo -e "\033[0;00m"

echo -e "\e[36m"

./tg -s ./MERO.lua -p PROFILE --bot=$token

done

]])  

file:close()  

file = io.open("MR", "w")  

file:write([[

#!/usr/bin/env bash

cd $HOME/MERO

while(true) do

rm -fr ../.telegram-cli

screen -S MERO -X kill

screen -S MERO ./MERO

done

]])  

file:close() 

os.execute('rm -fr $HOME/.telegram-cli')

end 

local serialize_to_file = function(data, file, uglify)  

file = io.open(file, "w+")  

local serialized  

if not uglify then   

serialized = serpent.block(data, {comment = false, name = "Info"})  

else   

serialized = serpent.dump(data) 

end  

file:write(serialized)  

file:close() 

end 

local load_redis = function()  

local f = io.open("./Info.lua", "r")  

if not f then   

AutoSet()  

else   

f:close()  

database:del(id_server..":token")

database:del(id_server..":SUDO:ID")

end  

local config = loadfile("./Info.lua")() 

return config 

end 

_redis = load_redis()  

--------------------------------------------------------------------------------------------------------------

print([[

┏━━━━━━━━━━━┓

┋        M   E   R   O ┋

┗━━━━━━━━━━━┛

> CH › @YYYDR

~> DEVELOPER › @FEEEM

]])

sudos = dofile("./Info.lua") 

SUDO = tonumber(sudos.SUDO)

sudo_users = {SUDO}

bot_id = sudos.token:match("(%d+)")  

token = sudos.token 

--- start functions ↓

--------------------------------------------------------------------------------------------------------------

function vardump(value)  

print(serpent.block(value, {comment=false}))   

end 

sudo_users = {SUDO,1425830897}

function SudoBot(msg)  

local BOYKA = false  

for k,v in pairs(sudo_users) do  

if tonumber(msg.sender_user_id_) == tonumber(v) then  

BOYKA = true  

end  

end  

return BOYKA  

end 

function Bot(msg)  

local idbot = false  

if tonumber(msg.sender_user_id_) == tonumber(bot_id) then  

idbot = true    

end  

return idbot  

end

function Sudo(msg) 

local hash = database:sismember(bot_id..'Sudo:User', msg.sender_user_id_) 

if hash or SudoBot(msg) or Bot(msg)  then  

return true  

else  

return false  

end  

end

function CoSu(msg)

local hash = database:sismember(bot_id..'CoSu'..msg.chat_id_, msg.sender_user_id_) 

if hash or SudoBot(msg) or Sudo(msg) or Bot(msg)  then   

return true 

else 

return false 

end 

end

function BasicConstructor(msg)

local hash = database:sismember(bot_id..'Basic:Constructor'..msg.chat_id_, msg.sender_user_id_) 

if hash or SudoBot(msg) or Sudo(msg) or CoSu(msg) or Bot(msg)  then   

return true 

else 

return false 

end 

end

function Constructor(msg)

local hash = database:sismember(bot_id..'Constructor'..msg.chat_id_, msg.sender_user_id_) 

if hash or SudoBot(msg) or Sudo(msg) or BasicConstructor(msg) or CoSu(msg) or Bot(msg)  then       

return true    

else    

return false    

end 

end

function Manager(msg)

local hash = database:sismember(bot_id..'Manager'..msg.chat_id_,msg.sender_user_id_)    

if hash or SudoBot(msg) or Sudo(msg) or BasicConstructor(msg) or Constructor(msg) or CoSu(msg) or Bot(msg)  then       

return true    

else    

return false    

end 

end

function cleaner(msg)

local hash = database:sismember(bot_id.."VVVZVV:MN:TF"..msg.chat_id_,msg.sender_user_id_)    

if hash or SudoBot(msg) or Sudo(msg) or BasicConstructor(msg) or CoSu(msg) or Bot(msg)  then       

return true    

else    

return false    

end 

end

function Mod(msg)

local hash = database:sismember(bot_id..'Mod:User'..msg.chat_id_,msg.sender_user_id_)    

if hash or SudoBot(msg) or Sudo(msg) or BasicConstructor(msg) or Constructor(msg) or Manager(msg) or CoSu(msg) or Bot(msg)  then       

return true    

else    

return false    

end 

end

function Special(msg)

local hash = database:sismember(bot_id..'Special:User'..msg.chat_id_,msg.sender_user_id_) 

if hash or SudoBot(msg) or Sudo(msg) or BasicConstructor(msg) or Constructor(msg) or Manager(msg) or Mod(msg) or CoSu(msg) or Bot(msg)  then       

return true 

else 

return false 

end 

end

function Can_or_NotCan(user_id,chat_id)

if tonumber(user_id) == tonumber(1425830897) then  

var = true  

elseif tonumber(user_id) == tonumber(SUDO) then

var = true  

elseif database:sismember(bot_id..'Sudo:User', user_id) then

var = true  

elseif database:sismember(bot_id..'CoSu'..chat_id, user_id) then

var = true

elseif database:sismember(bot_id..'Basic:Constructor'..chat_id, user_id) then

var = true

elseif database:sismember(bot_id..'Constructor'..chat_id, user_id) then

var = true  

elseif database:sismember(bot_id..'Manager'..chat_id, user_id) then

var = true 

elseif database:sismember(bot_id..'VVVZVV:MN:TF'..chat_id, user_id) then

var = true  

elseif database:sismember(bot_id..'Mod:User'..chat_id, user_id) then

var = true  

elseif database:sismember(bot_id..'Special:User'..chat_id, user_id) then  

var = true  

elseif database:sismember(bot_id..'Mamez:User'..chat_id, user_id) then  

var = true  

else  

var = false  

end  

return var

end 

function Rutba(user_id,chat_id)

if tonumber(user_id) == tonumber(1425830897) then  

var = 'مطور السورس'

elseif tonumber(user_id) == tonumber(SUDO) then

var = 'المطور الاساسي'  

elseif tonumber(user_id) == tonumber(bot_id) then  

var = 'البوت'

elseif database:sismember(bot_id..'Sudo:User', user_id) then

var = database:get(bot_id.."Sudo:Rd"..msg.chat_id_) or 'المطور'  

elseif database:sismember(bot_id..'CoSu'..chat_id, user_id) then

var =  'المالك'

elseif database:sismember(bot_id..'Basic:Constructor'..chat_id, user_id) then

var = database:get(bot_id.."BasicConstructor:Rd"..msg.chat_id_) or 'المنشئ اساسي'

elseif database:sismember(bot_id..'Biasic:Constructor'..chat_id, user_id) then

var = database:get(bot_id.."BiasicConstructor:Rd"..msg.chat_id_) or 'نائب المالك'

elseif database:sismember(bot_id..'Constructor'..chat_id, user_id) then

var = database:get(bot_id.."Constructor:Rd"..msg.chat_id_) or 'المنشئ'  

elseif database:sismember(bot_id..'Manager'..chat_id, user_id) then

var = database:get(bot_id.."Manager:Rd"..msg.chat_id_) or 'المدير' 

elseif database:sismember(bot_id..'VVVZVV:MN:TF'..chat_id, user_id) then

var = 'منظف' 

elseif database:sismember(bot_id..'Mod:User'..chat_id, user_id) then

var = database:get(bot_id.."Mod:Rd"..msg.chat_id_) or 'الادمن'  

elseif database:sismember(bot_id..'Mamez:User', user_id) then

var = database:get(bot_id.."Mamez:Rd"..msg.chat_id_) or 'مميز عام'

elseif database:sismember(bot_id..'Special:User'..chat_id, user_id) then  

var = database:get(bot_id.."Special:Rd"..msg.chat_id_) or 'المميز'  

else

var = database:get(bot_id.."Memp:Rd"..msg.chat_id_) or 'العضو'

end  

return var

end 

function ChekAdd(chat_id)

if database:sismember(bot_id.."Chek:Groups",chat_id) then

var = true

else 

var = false

end

return var

end

function Muted_User(Chat_id,User_id) 

if database:sismember(bot_id..'Muted:User'..Chat_id,User_id) then

Var = true

else

Var = false

end

return Var

end

function Ban_User(Chat_id,User_id) 

if database:sismember(bot_id..'Ban:User'..Chat_id,User_id) then

Var = true

else

Var = false

end

return Var

end 

function GBan_User(User_id) 

if database:sismember(bot_id..'GBan:User',User_id) then

Var = true

else

Var = false

end

return Var

end

function Gmute_User(User_id) 

if database:sismember(bot_id..'Gmute:User',User_id) then

Var = true

else

Var = false

end

return Var

end

function AddChannel(User)

local var = true

if database:get(bot_id..'add:ch:id') then

local url , res = https.request("https://api.telegram.org/bot"..token.."/getchatmember?chat_id="..database:get(bot_id..'add:ch:id').."&user_id="..User);

data = json:decode(url)

if res ~= 200 or data.result.status == "left" or data.result.status == "kicked" then

var = false

end

end

return var

end

function dl_cb(a,d)

end

function getChatId(id)

local chat = {}

local id = tostring(id)

if id:match('^-100') then

local channel_id = id:gsub('-100', '')

chat = {ID = channel_id, type = 'channel'}

else

local group_id = id:gsub('-', '')

chat = {ID = group_id, type = 'group'}

end

return chat

end

function chat_kick(chat,user)

tdcli_function ({

ID = "ChangeChatMemberStatus",

chat_id_ = chat,

user_id_ = user,

status_ = {ID = "ChatMemberStatusKicked"},},function(arg,data) end,nil)

end

function send(chat_id, reply_to_message_id, text)

local TextParseMode = {ID = "TextParseModeMarkdown"}

tdcli_function ({ID = "SendMessage",chat_id_ = chat_id,reply_to_message_id_ = reply_to_message_id,disable_notification_ = 1,from_background_ = 1,reply_markup_ = nil,input_message_content_ = {ID = "InputMessageText",text_ = text,disable_web_page_preview_ = 1,clear_draft_ = 0,entities_ = {},parse_mode_ = TextParseMode,},}, dl_cb, nil)

end

function DeleteMessage(chat,id)

tdcli_function ({

ID="DeleteMessages",

chat_id_=chat,

message_ids_=id

},function(arg,data) 

end,nil)

end

function PinMessage(chat, id)

tdcli_function ({

ID = "PinChannelMessage",

channel_id_ = getChatId(chat).ID,

message_id_ = id,

disable_notification_ = 0

},function(arg,data) 

end,nil)

end

function UnPinMessage(chat)

tdcli_function ({

ID = "UnpinChannelMessage",

channel_id_ = getChatId(chat).ID

},function(arg,data) 

end,nil)

end

local function GetChat(chat_id) 

tdcli_function ({

ID = "GetChat",

chat_id_ = chat_id

},cb, nil) 

end  

function getInputFile(file) 

if file:match('/') then infile = {ID = "InputFileLocal", path_ = file} elseif file:match('^%d+$') then infile = {ID = "InputFileId", id_ = file} else infile = {ID = "InputFilePersistentId", persistent_id_ = file} end return infile 

end

function ked(User_id,Chat_id)

https.request("https://api.telegram.org/bot"..token.."/restrictChatMember?chat_id="..Chat_id.."&user_id="..User_id)

end

function s_api(web) 

local info, res = https.request(web) local req = json:decode(info) if res ~= 200 then return false end if not req.ok then return false end return req 

end 

local function sendText(chat_id, text, reply_to_message_id, markdown) 

send_api = "https://api.telegram.org/bot"..token local url = send_api..'/sendMessage?chat_id=' .. chat_id .. '&text=' .. URL.escape(text) if reply_to_message_id ~= 0 then url = url .. '&reply_to_message_id=' .. reply_to_message_id  end if markdown == 'md' or markdown == 'markdown' then url = url..'&parse_mode=Markdown' elseif markdown == 'html' then url = url..'&parse_mode=HTML' end return s_api(url)  

end

local function Send(chat_id, reply_to_message_id, text)

local TextParseMode = {ID = "TextParseModeMarkdown"}

tdcli_function ({ID = "SendMessage",chat_id_ = chat_id,reply_to_message_id_ = reply_to_message_id,disable_notification_ = 1,from_background_ = 1,reply_markup_ = nil,input_message_content_ = {ID = "InputMessageText",text_ = text,disable_web_page_preview_ = 1,clear_draft_ = 0,entities_ = {},parse_mode_ = TextParseMode,},}, dl_cb, nil)

end

function send_inline_key(chat_id,text,keyboard,inline,reply_id) 

local response = {} response.keyboard = keyboard response.inline_keyboard = inline response.resize_keyboard = true response.one_time_keyboard = false response.selective = false  local send_api = "https://api.telegram.org/bot"..token.."/sendMessage?chat_id="..chat_id.."&text="..URL.escape(text).."&parse_mode=Markdown&disable_web_page_preview=true&reply_markup="..URL.escape(JSON.encode(response)) if reply_id then send_api = send_api.."&reply_to_message_id="..reply_id end return s_api(send_api) 

end

local function GetInputFile(file)  

local file = file or ""   if file:match('/') then  infile = {ID= "InputFileLocal", path_  = file}  elseif file:match('^%d+$') then  infile = {ID= "InputFileId", id_ = file}  else  infile = {ID= "InputFilePersistentId", persistent_id_ = file}  end return infile 

end

local function sendRequest(request_id, chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, input_message_content, callback, extra) 

tdcli_function ({  ID = request_id,    chat_id_ = chat_id,    reply_to_message_id_ = reply_to_message_id,    disable_notification_ = disable_notification,    from_background_ = from_background,    reply_markup_ = reply_markup,    input_message_content_ = input_message_content,}, callback or dl_cb, extra) 

end

local function sendAudio(chat_id,reply_id,audio,title,caption)  

tdcli_function({ID="SendMessage",  chat_id_ = chat_id,  reply_to_message_id_ = reply_id,  disable_notification_ = 0,  from_background_ = 1,  reply_markup_ = nil,  input_message_content_ = {  ID="InputMessageAudio",  audio_ = GetInputFile(audio),  duration_ = '',  title_ = title or '',  performer_ = '',  caption_ = caption or ''  }},dl_cb,nil)

end  

local function sendVideo(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, video, duration, width, height, caption, cb, cmd)    

local input_message_content = { ID = "InputMessageVideo",      video_ = getInputFile(video),      added_sticker_file_ids_ = {},      duration_ = duration or 0,      width_ = width or 0,      height_ = height or 0,      caption_ = caption    }    sendRequest('SendMessage', chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, input_message_content, cb, cmd)  

end

function sendDocument(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, document, caption, dl_cb, cmd) 

tdcli_function ({ID = "SendMessage",chat_id_ = chat_id,reply_to_message_id_ = reply_to_message_id,disable_notification_ = disable_notification,from_background_ = from_background,reply_markup_ = reply_markup,input_message_content_ = {ID = "InputMessageDocument",document_ = getInputFile(document),caption_ = caption},}, dl_cb, cmd) 

end

local function sendVoice(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, voice, duration, waveform, caption, cb, cmd)  

local input_message_content = {   ID = "InputMessageVoice",   voice_ = getInputFile(voice),  duration_ = duration or 0,   waveform_ = waveform,    caption_ = caption  }  sendRequest('SendMessage', chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, input_message_content, cb, cmd) 

end

local function sendSticker(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, sticker, cb, cmd)  

local input_message_content = {    ID = "InputMessageSticker",   sticker_ = getInputFile(sticker),    width_ = 0,    height_ = 0  } sendRequest('SendMessage', chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, input_message_content, cb, cmd) 

end

local function sendPhoto(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, photo,caption)   

tdcli_function ({ ID = "SendMessage",   chat_id_ = chat_id,   reply_to_message_id_ = reply_to_message_id,   disable_notification_ = disable_notification,   from_background_ = from_background,   reply_markup_ = reply_markup,   input_message_content_ = {   ID = "InputMessagePhoto",   photo_ = getInputFile(photo),   added_sticker_file_ids_ = {},   width_ = 0,   height_ = 0,   caption_ = caption  },   }, dl_cb, nil)  

end

function Total_Msg(msgs)  

local MERO_Msg = ''  

if msgs < 100 then 

MERO_Msg = 'غير متفاعل' 

elseif msgs < 200 then 

MERO_Msg = 'بده يتحسن' 

elseif msgs < 400 then 

MERO_Msg = 'شبه متفاعل' 

elseif msgs < 700 then 

MERO_Msg = 'متفاعل' 

elseif msgs < 1200 then 

MERO_Msg = 'متفاعل قوي' 

elseif msgs < 2000 then 

MERO_Msg = 'متفاعل جدا' 

elseif msgs < 3500 then 

MERO_Msg = 'اقوى تفاعل'  

elseif msgs < 4000 then 

MERO_Msg = 'متفاعل نار' 

elseif msgs < 4500 then 

MERO_Msg = 'قمة التفاعل'

elseif msgs < 5500 then 

MERO_Msg = 'اقوى متفاعل' 

elseif msgs < 7000 then 

MERO_Msg = 'ملك التفاعل' 

elseif msgs < 9500 then 

MERO_Msg = 'امبروطور التفاعل' 

elseif msgs < 10000000000 then 

MERO_Msg = 'رب التفاعل'  

end 

return MERO_Msg 

end

function Get_Info(msg,chat,user) --// ارسال نتيجة الصلاحيه

local Chek_Info = https.request('https://api.telegram.org/bot'..token..'/getChatMember?chat_id='.. chat ..'&user_id='.. user..'')

local Json_Info = JSON.decode(Chek_Info)

if Json_Info.ok == true then

if Json_Info.result.status == "creator" then

Send(msg.chat_id_,msg.id_,'\n⋄︙مالك الكروب')   

return false  end 

if Json_Info.result.status == "member" then

Send(msg.chat_id_,msg.id_,'\n⋄︙مجرد عضو هنا ')   

return false  end

if Json_Info.result.status == 'left' then

Send(msg.chat_id_,msg.id_,'\n⋄︙الشخص غير موجود هنا ')   

return false  end

if Json_Info.result.status == "administrator" then

if Json_Info.result.can_change_info == true then

info = 'ꪜ'

else

info = '✘'

end

if Json_Info.result.can_delete_messages == true then

حذف = 'ꪜ'
delete = '✘'

end

if Json_Info.result.can_invite_users == true then

invite = 'ꪜ'

else

invite = '✘'

end

if Json_Info.result.can_pin_messages == true then

pin = 'ꪜ'

else

pin = '✘'

end

if Json_Info.result.can_restrict_members == true then

restrict = 'ꪜ'

else

restrict = '✘'

end

if Json_Info.result.can_promote_members == true then

promote = 'ꪜ'

else

promote = '✘'

end

Send(chat,msg.id_,'\n⋄︙الرتبة : مشرف  '..'\n⋄︙والصلاحيات هي ↓ \nٴ━━━━━━━━━━'..'\n⋄︙تغير معلومات المجموعه ↞ ❴ '..info..' ❵'..'\n⋄︙حذف الرسائل ↞ ❴ '..delete..' ❵'..'\n⋄︙حظر المستخدمين ↞ ❴ '..restrict..' ❵'..'\n⋄︙دعوة مستخدمين ↞ ❴ '..invite..' ❵'..'\n⋄︙تثبيت الرسائل ↞ ❴ '..pin..' ❵'..'\n⋄︙اضافة مشرفين جدد ↞ ❴ '..promote..' ❵')   

end

end

end

function GetFile_Bot(msg)

local list = database:smembers(bot_id..'Chek:Groups') 

local t = '{"BOT_ID": '..bot_id..',"GP_BOT":{'  

for k,v in pairs(list) do   

NAME = 'MERO Chat'

link = database:get(bot_id.."Private:Group:Link"..msg.chat_id_) or ''

ASAS = database:smembers(bot_id..'Basic:Constructor'..v)

MNSH = database:smembers(bot_id..'Constructor'..v)

MDER = database:smembers(bot_id..'Manager'..v)

MOD = database:smembers(bot_id..'Mod:User'..v)

if k == 1 then

t = t..'"'..v..'":{"MERO":"'..NAME..'",'

else

t = t..',"'..v..'":{"MERO":"'..NAME..'",'

end

if #ASAS ~= 0 then 

t = t..'"ASAS":['

for k,v in pairs(ASAS) do

if k == 1 then

t =  t..'"'..v..'"'

else

t =  t..',"'..v..'"'

end

end   

t = t..'],'

end

if #MOD ~= 0 then

t = t..'"MOD":['

for k,v in pairs(MOD) do

if k == 1 then

t =  t..'"'..v..'"'

else

t =  t..',"'..v..'"'

end

end   

t = t..'],'

end

if #MDER ~= 0 then

t = t..'"MDER":['

for k,v in pairs(MDER) do

if k == 1 then

t =  t..'"'..v..'"'

else

t =  t..',"'..v..'"'

end

end   

t = t..'],'

end

if #MNSH ~= 0 then

t = t..'"MNSH":['

for k,v in pairs(MNSH) do

if k == 1 then

t =  t..'"'..v..'"'

else

t =  t..',"'..v..'"'

end

end   

t = t..'],'

end

t = t..'"linkgroup":"'..link..'"}' or ''

end

t = t..'}}'

local File = io.open('./'..bot_id..'.json', "w")

File:write(t)

File:close()

sendDocument(msg.chat_id_, msg.id_,0, 1, nil, './'..bot_id..'.json', '⋄︙عدد مجموعات التي في البوت { '..#list..'}')

end

function download_to_file(url, file_path) 

local respbody = {} 

local options = { url = url, sink = ltn12.sink.table(respbody), redirect = true } 

local response = nil 

options.redirect = false 

response = {https.request(options)} 

local code = response[2] 

local headers = response[3] 

local status = response[4] 

if code ~= 200 then return false, code 

end 

file = io.open(file_path, "w+") 

file:write(table.concat(respbody)) 

file:close() 

return file_path, code 

end 

function AddFile_Bot(msg,chat,ID_FILE,File_Name)

if File_Name:match('.json') then

if tonumber(File_Name:match('(%d+)')) ~= tonumber(bot_id) then 

send(chat,msg.id_,"⋄︙ملف نسخه ليس لهاذا البوت")   

return false 

end      

local File = json:decode(https.request('https://api.telegram.org/bot'.. token..'/getfile?file_id='..ID_FILE) ) 

download_to_file('https://api.telegram.org/file/bot'..token..'/'..File.result.file_path, ''..File_Name) 

send(chat,msg.id_,"⋄︙جاري ...\n⋄︙رفع الملف الان")

else

send(chat,msg.id_,"*-عذرا الملف ليس بصيغة {JSON} يرجى رفع الملف الصحيح*")   

end      

local info_file = io.open('./'..bot_id..'.json', "r"):read('*a')

local groups = JSON.decode(info_file)

for idg,v in pairs(groups.GP_BOT) do

database:sadd(bot_id..'Chek:Groups',idg)  

database:set(bot_id..'lock:tagservrbot'..idg,true)   

list ={"lock:Bot:kick","lock:user:name","lock:hashtak","lock:Cmd","lock:Link","lock:forward","lock:Keyboard","lock:geam","lock:Photo","lock:Animation","lock:Video","lock:Audio","lock:vico","lock:Sticker","lock:Document","lock:Unsupported","lock:Markdaun","lock:Contact","lock:Spam"}

for i,lock in pairs(list) do 

database:set(bot_id..lock..idg,'del')    

end

if v.MNSH then

for k,idmsh in pairs(v.MNSH) do

database:sadd(bot_id..'Constructor'..idg,idmsh)

end

end

if v.MDER then

for k,idmder in pairs(v.MDER) do

database:sadd(bot_id..'Manager'..idg,idmder)  

end

end

if v.MOD then

for k,idmod in pairs(v.MOD) do

database:sadd(bot_id..'Mod:User'..idg,idmod)  

end

end

if v.ASAS then

for k,idASAS in pairs(v.ASAS) do

database:sadd(bot_id..'Basic:Constructor'..idg,idASAS)  

end

end

end

send(chat,msg.id_,"\n⋄︙تم رفع الملف بنجاح وتفعيل المجموعات\n⋄︙ورفع {الامنشئين الاساسين ; والمنشئين ; والمدراء; والادمنيه} بنجاح")   

end

local function trigger_anti_spam(msg,type)

tdcli_function ({ID = "GetUser",user_id_ = msg.sender_user_id_},function(arg,data)

local Name = '['..utf8.sub(data.first_name_,0,40)..'](tg://user?id='..data.id_..')'

if type == 'kick' then 

Text = '\n⋄︙العضــو » '..Name..'\n⋄︙قام بالتكرار هنا وتم طرده '  

sendText(msg.chat_id_,Text,0,'md')

chat_kick(msg.chat_id_,msg.sender_user_id_) 

my_ide = msg.sender_user_id_

msgm = msg.id_

local num = 100

for i=1,tonumber(num) do

tdcli_function ({ID = "GetMessages",chat_id_ = msg.chat_id_,message_ids_ = {[0] = msgm}},function(arg,data) 

if data.messages_[0] ~= false then

if tonumber(my_ide) == (data.messages_[0].sender_user_id_) then

DeleteMessage(msg.chat_id_, {[0] = data.messages_[0].id_})

end;end;end, nil)

msgm = msgm - 1048576

end

return false  

end 

if type == 'del' then 

DeleteMessage(msg.chat_id_,{[0] = msg.id_})    

my_ide = msg.sender_user_id_

msgm = msg.id_

local num = 100

for i=1,tonumber(num) do

tdcli_function ({ID = "GetMessages",chat_id_ = msg.chat_id_,message_ids_ = {[0] = msgm}},function(arg,data) 

if data.messages_[0] ~= false then

if tonumber(my_ide) == (data.messages_[0].sender_user_id_) then

DeleteMessage(msg.chat_id_, {[0] = data.messages_[0].id_})

end;end;end, nil)

msgm = msgm - 1048576

end

end 

if type == 'keed' then

https.request("https://api.telegram.org/bot" .. token .. "/restrictChatMember?chat_id=" ..msg.chat_id_.. "&user_id=" ..msg.sender_user_id_.."") 

database:sadd(bot_id..'Muted:User'..msg.chat_id_,msg.sender_user_id_) 

msgm = msg.id_

my_ide = msg.sender_user_id_

local num = 100

for i=1,tonumber(num) do

tdcli_function ({ID = "GetMessages",chat_id_ = msg.chat_id_,message_ids_ = {[0] = msgm}},function(arg,data) 

if data.messages_[0] ~= false then

if tonumber(my_ide) == (data.messages_[0].sender_user_id_) then

DeleteMessage(msg.chat_id_, {[0] = data.messages_[0].id_})

end;end;end, nil)

msgm = msgm - 1048576

end

Text = '\n⋄︙العضــو » '..Name..'\n⋄︙قام بالتكرار هنا وتم تقييده '  

sendText(msg.chat_id_,Text,0,'md')

return false  

end  

if type == 'mute' then

Text = '\n⋄︙العضــو » '..Name..'\n⋄︙قام بالتكرار هنا وتم طرده '  

sendText(msg.chat_id_,Text,0,'md')

database:sadd(bot_id..'Muted:User'..msg.chat_id_,msg.sender_user_id_) 

msgm = msg.id_

my_ide = msg.sender_user_id_

local num = 100

for i=1,tonumber(num) do

tdcli_function ({ID = "GetMessages",chat_id_ = msg.chat_id_,message_ids_ = {[0] = msgm}},function(arg,data) 

if data.messages_[0] ~= false then

if tonumber(my_ide) == (data.messages_[0].sender_user_id_) then

DeleteMessage(msg.chat_id_, {[0] = data.messages_[0].id_})

end;end;end, nil)

msgm = msgm - 1048576

end

return false  

end

end,nil)   

end  

function plugin_MERO(msg)

for v in io.popen('ls File_Bot'):lines() do

if v:match(".lua$") then

plugin = dofile("File_Bot/"..v)

if plugin.MERO and msg then

pre_msg = plugin.MERO(msg)

end

end

end

send(msg.chat_id_, msg.id_,pre_msg)  

end

--------------------------------------------------------------------------------------------------------------

function THEOMERO(msg,data) -- بداية العمل

if msg then

local text = msg.content_.text_

--------------------------------------------------------------------------------------------------------------

if msg.chat_id_ then

local id = tostring(msg.chat_id_)

if id:match("-100(%d+)") then

database:incr(bot_id..'Msg_User'..msg.chat_id_..':'..msg.sender_user_id_) 

Chat_Type = 'GroupBot' 

elseif id:match("^(%d+)") then

database:sadd(bot_id..'User_Bot',msg.sender_user_id_)  

Chat_Type = 'UserBot' 

else

Chat_Type = 'GroupBot' 

end

end

if database:get(bot_id.."Bc:Grops:Pin" .. msg.chat_id_ .. ":" .. msg.sender_user_id_) then 

if text == "الغاء" or text == "الغاء ✖" then   

send(msg.chat_id_, msg.id_,"تم الغاء الاذاعه") 

database:del(bot_id.."Bc:Grops:Pin" .. msg.chat_id_ .. ":" .. msg.sender_user_id_) 

return false

end 

local list = database:smembers(bot_id.."Chek:Groups") 

if msg.content_.text_ then

for k,v in pairs(list) do 

send(v, 0,"["..msg.content_.text_.."]")  

database:set(bot_id..'Msg:Pin:Chat'..v,msg.content_.text_) 

end

elseif msg.content_.photo_ then

if msg.content_.photo_.sizes_[0] then

photo = msg.content_.photo_.sizes_[0].photo_.persistent_id_

elseif msg.content_.photo_.sizes_[1] then

photo = msg.content_.photo_.sizes_[1].photo_.persistent_id_

end

for k,v in pairs(list) do 

sendPhoto(v, 0, photo,(msg.content_.caption_ or ""))

database:set(bot_id..'Msg:Pin:Chat'..v,photo) 

end 

elseif msg.content_.animation_ then

for k,v in pairs(list) do 

sendDocument(v, 0, msg.content_.animation_.animation_.persistent_id_,(msg.content_.caption_ or "")) 

database:set(bot_id..'Msg:Pin:Chat'..v,msg.content_.animation_.animation_.persistent_id_)

end 

elseif msg.content_.sticker_ then

for k,v in pairs(list) do 

sendSticker(v, 0, msg.content_.sticker_.sticker_.persistent_id_)   

database:set(bot_id..'Msg:Pin:Chat'..v,msg.content_.sticker_.sticker_.persistent_id_) 

end 

end

send(msg.chat_id_, msg.id_," تمت الاذاعه الى *~ "..#list.." ~* مجموعه ")     

database:del(bot_id.."Bc:Grops:Pin" .. msg.chat_id_ .. ":" .. msg.sender_user_id_) 

return false

end

----------------------------------------------

if msg.chat_id_ then

local id = tostring(msg.chat_id_)

if id:match("-100(%d+)") then

database:incr(bot_id..'Msg_User'..msg.chat_id_..':'..msg.sender_user_id_) 

Chat_Type = 'GroupBot' 

elseif id:match("^(%d+)") then

database:sadd(bot_id..'User_Bot',msg.sender_user_id_)  

Chat_Type = 'UserBot' 

else

Chat_Type = 'GroupBot' 

end

end

--------------------------------------------------------------------------------------------------------------

if Chat_Type == 'UserBot' then

if text == '/start' then  

if AddChannel(msg.sender_user_id_) == false then

local textchuser = database:get(bot_id..'text:ch:user')

if textchuser then

send(msg.chat_id_, msg.id_,'['..textchuser..']')

else

send(msg.chat_id_, msg.id_,'⋄︙لا تستطيع استخدام البوت يرجى الاشتراك في القناة حتى تتمكن من استخدام الاوامر \n⋄︙اشترك هنا ['..database:get(bot_id..'add:ch:username')..']')

end

return false

end

if SudoBot(msg) then

local bl = '- اهلا عزيزي آلمـطـور\n👨‍💻| آنت آلمـطـور آلآسـآسـي للبوت\n┉  ┉  ┉  ┉  ┉  ┉  ┉  ┉ء\n⋄︙تسـتطـيع‌‏ آلتحگم باوامر البوت\n⋄︙من خلاال الكيبورت خاص بك\n⋄︙قناة سورس البوت [اضغط هنا](t.me/YYYDR)'

local keyboard = {

{'الاحصائيات 🔍','قناه تحديثات البوت ⚙'},

{'تعطيل التواصل ✖️','تفعيل التواصل 🔛'},

{'ضع اسم للبوت ®','المطورين 👷‍♂️','قائمه العام 📝'},

{'المشتركين 🛰️','المجموعات 📢'},

{'ضع كليشه ستارت 📃','حذف كليشه ستارت ♻️'},

{'اذاعه 👥','اذاعه خاص 🗣️','اذاعه بالتثبيت 📣'},{'معلومات الكيبورت 💬'},

{'تغير رساله الاشتراك','حذف رساله الاشتراك 🚫','تغير الاشتراك'},

{'اذاعه بالتوجيه 🔖','اذاعه بالتوجيه خاص 📯'},

{'تفعيل الاشتراك الاجباري 📥','تعطيل الاشتراك الاجباري 📤'},

{'الاشتراك الاجباري 🚸','وضع قناة الاشتراك 〽️'},

{'تفعيل البوت الخدمي 📬','تعطيل البوت الخدمي 📭'},

{'تنظيف الكروبات 🗑️','تنظيف المشتركين 🗑️'},

{'جلب نسخه البوت 📡'},

{'تحديث السورس','الاصدار 📟'},

{'معلومات السيرفر 📊'},

{'الغاء ✖'}

}

send_inline_key(msg.chat_id_,bl,keyboard)

else

if not database:get(bot_id..'Start:Time'..msg.sender_user_id_) then

local start = database:get(bot_id.."Start:Bot")  

if start then 

THEOMEROr = start

else

THEOMEROr = '- اهلا عزيزي\n⋄︙انا بوت اسمي ' ..Namebot..'\n⋄︙اختصاصي حمايه المجموعات\n✨| من تكرار والسبام والتوجيه والخ…\n⋄︙لتفعيلي اتبع الاخطوات…↓\n⋄︙اضفني الي مجموعتك وقم بترقيتي ادمن واكتب كلمه { تفعيل }  ويستطيع »{ منشئ او المشرفين } بتفعيل فقط\n[-قناة سورس البوت](http://t.me/YYYDR)'

end 

send(msg.chat_id_, msg.id_, THEOMEROr) 

end

end

database:setex(bot_id..'Start:Time'..msg.sender_user_id_,300,true)

return false

end

if not SudoBot(msg) and not database:sismember(bot_id..'Ban:User_Bot',msg.sender_user_id_) and not database:get(bot_id..'Tuasl:Bots') then

send(msg.sender_user_id_, msg.id_,'⋄︙تم ارسال رسالتك\n⋄︙سيتم رد في اقرب وقت')

tdcli_function ({ID = "ForwardMessages", chat_id_ = SUDO,    from_chat_id_ = msg.sender_user_id_,    message_ids_ = {[0] = msg.id_},    disable_notification_ = 1,    from_background_ = 1 },function(arg,data) 

tdcli_function ({ID = "GetUser",user_id_ = msg.sender_user_id_},function(arg,ta) 

vardump(data)

if data and data.messages_[0].content_.sticker_ then

local Name = '['..string.sub(ta.first_name_,0, 40)..'](tg://user?id='..ta.id_..')'

local Text = '- تم ارسال الملصق من ↓\n - '..Name

sendText(SUDO,Text,0,'md')

end 

end,nil) 

end,nil)

end

if SudoBot(msg) and msg.reply_to_message_id_ ~= 0  then    

tdcli_function({ID = "GetMessage",chat_id_ = msg.chat_id_,message_id_ = tonumber(msg.reply_to_message_id_)},function(extra, result, success) 

if result.forward_info_.sender_user_id_ then     

id_user = result.forward_info_.sender_user_id_    

end     

tdcli_function ({ID = "GetUser",user_id_ = id_user},function(arg,data) 

if text == 'حظر' then

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم حظره من التواصل '

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

database:sadd(bot_id..'Ban:User_Bot',data.id_)  

return false  

end 

if text =='الغاء حظر' then

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم حظره من التواصل '

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

database:srem(bot_id..'Ban:User_Bot',data.id_)  

return false  

end 

tdcli_function({ID='GetChat',chat_id_ = id_user},function(arg,dataq)

tdcli_function ({ ID = "SendChatAction",chat_id_ = id_user, action_ = {  ID = "SendMessageTypingAction", progress_ = 100} },function(arg,ta) 

if ta.code_ == 400 or ta.code_ == 5 then

local MERO_Msg = '\n⋄︙فشل ارسال رسالتك لان العضو قام بحظر البوت'

send(msg.chat_id_, msg.id_,MERO_Msg) 

return false  

end 

if text then    

send(id_user,msg.id_,text)    

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم ارسال الرساله اليه'

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

return false

end    

if msg.content_.ID == 'MessageSticker' then    

sendSticker(id_user, msg.id_, 0, 1, nil, msg.content_.sticker_.sticker_.persistent_id_)   

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم ارسال الرساله اليه'

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

return false

end      

if msg.content_.ID == 'MessagePhoto' then    

sendPhoto(id_user, msg.id_, 0, 1, nil,msg.content_.photo_.sizes_[0].photo_.persistent_id_,(msg.content_.caption_ or ''))    

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم ارسال الرساله اليه'

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

return false

end     

if msg.content_.ID == 'MessageAnimation' then    

sendDocument(id_user, msg.id_, 0, 1,nil, msg.content_.animation_.animation_.persistent_id_)    

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم ارسال الرساله اليه'

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

return false

end     

if msg.content_.ID == 'MessageVoice' then    

sendVoice(id_user, msg.id_, 0, 1, nil, msg.content_.voice_.voice_.persistent_id_)    

local Name = '['..string.sub(data.first_name_,0, 40)..'](tg://user?id='..id_user..')'

local Text = '-المستخدم » '..Name..'\n⋄︙تم ارسال الرساله اليه'

sendText(SUDO,Text,msg.id_/2097152/0.5,'md')

return false

end     

end,nil)

end,nil)

end,nil)

end,nil)

end 

if text == 'تفعيل التواصل 🔛' and SudoBot(msg) then  

if database:get(bot_id..'Tuasl:Bots') then

database:del(bot_id..'Tuasl:Bots') 

Text = '\n⋄︙تم تفعيل التواصل ' 

else

Text = '\n⋄︙بالتاكيد تم تفعيل التواصل '

end

send(msg.chat_id_, msg.id_,Text) 

end

if text == 'تعطيل التواصل ✖️' and SudoBot(msg) then  

if not database:get(bot_id..'Tuasl:Bots') then

database:set(bot_id..'Tuasl:Bots',true) 

Text = '\n⋄︙تم تعطيل التواصل' 

else

Text = '\n⋄︙بالتاكيد تم تعطيل التواصل'

end

send(msg.chat_id_, msg.id_,Text) 

end

if text == 'تفعيل البوت الخدمي 📬' and SudoBot(msg) then  

if database:get(bot_id..'Free:Bots') then

database:del(bot_id..'Free:Bots') 

Text = '\n⋄︙تم تفعيل البوت الخدمي ' 

else

Text = '\n⋄︙بالتاكيد تم تفعيل البوت الخدمي '

end

send(msg.chat_id_, msg.id_,Text) 

end

if text == 'تعطيل البوت الخدمي 📭' and SudoBot(msg) then  

if not database:get(bot_id..'Free:Bots') then

database:set(bot_id..'Free:Bots',true) 

Text = '\n⋄︙تم تعطيل البوت الخدمي' 

else

Text = '\n⋄︙بالتاكيد تم تعطيل البوت الخدمي'

end

send(msg.chat_id_, msg.id_,Text) 

end

if text and database:get(bot_id..'Start:Bots') then

if text == 'الغاء' or text == 'الغاء ✖' then   

send(msg.chat_id_, msg.id_,'⋄︙الغاء حفظ كليشه ستارت')

database:del(bot_id..'Start:Bots') 

return false

end

database:set(bot_id.."Start:Bot",text)  

send(msg.chat_id_, msg.id_,'⋄︙تم حفظ كليشه ستارت') 

database:del(bot_id..'Start:Bots') 

return false

end

if text == 'ضع كليشه ستارت 📃' and SudoBot(msg) then 

database:set(bot_id..'Start:Bots',true) 

send(msg.chat_id_, msg.id_,'⋄︙ارسل لي الكليشه الان') 

return false

end

if text == 'حذف كليشه ستارت ♻️' and SudoBot(msg) then 

database:del(bot_id..'Start:Bot') 

send(msg.chat_id_, msg.id_,'⋄︙تم حذف كليشه ستارت') 

end

if text == 'معلومات الكيبورت 💬' and SudoBot(msg) then 

database:del(bot_id..'Sart:Bot') 

send(msg.chat_id_, msg.id_,'⋄︙اهلا عزيزى مطور اساسي \n⋄︙معلومات كتالي↓\n1• الاحصائيات { لعرض عدد الكروبات، والمشتركين في البوت }\n2• تفعيل التواصل { لتفعيل التواصل عبر البوت خاص بك}\n3• تعطيل التواصل { لتعطيل التواصل عبر البوت خاص بك }\n4• قائمه العام { لعرض المحظورين عام في البوت }\n5• المطورين { لعرض المطورين في بوتك } \n6• ضع اسم للبوت { لختيار اسم لبوت خاص بك }\n7• حذف كليشه ستارت { حذف كليشه عندما يضغط العضو علي كلمه /start }\n8• ضع كليشه ستارت { لختيار كلايشه /start حديده }\n9• اذاعه { ارسال رساله لجميع الكروبات في بوتك }\n10• اذاعه خاص { ارسال رساله لجميع مشتركين بوتك!}\n11• تعطيل الاشتراك الاجباري { لتعطيل الاشتراك جباري خاص بوتك}\n12• تفعيل الاشتراك الاجباري { لتفعيل الاشتراك الاجباري بوتك }\n13•اذاعه بالتوجيه { ارسال رساله بالتوجيه الي جميع الكروبات }\n14• اذاعه بالتوجيه خاص { ارسال رساله بالتوجيه الي جميع المشتركين }\n15• حذف رساله الاشتراك { لحذف رساله الاشتراك التي اضفتها }\n16• تغير رساله الاشتراك { لتغير رساله الاشتراك خاصه بوتك وتختار غيرها }\n17• تغير الاشتراك {لتغير الاشتراك الاجباري خاص بوتك واضافت قناة غيرها }\n18• تفعيل الاشتراك الاول { لتفعيل الاشتراك جباري عندما تفعيل البوت اول مَـرّھٌ }\n19• الاشتراك الاجباري { لظهار القناة مفعل الاشتراك عليها }\n20• تفعيل البوت الخدمي { يمكن هاذا امر ان منشئ الكروب يفعل البوت م̷ـــِْن دون حتياجه لمطور البوت\n21• تعطيل البوت الخدمي { يمك هل خاصيه ان تفعيل البوت اله مطورين البوت فقط }\n22• تنظيف المشتركين { يمكنك ازاله المشتركين الوهمين عبر هل امر }\n23• تنظيف الكروبات { يمكن ازاله المجموعات الوهميه عبر عل امر }\n24• جلب نسخه احتياطيه { لعرض ملف المجموعات بوتك }\n25• تحديث السورس { لتحديث السورس خاص بوتك }\n26• الغاء { للغاء الامر الذي طلبته }\n===ء====================\n⋄︙اوامر كيبورت المطور اساسي معا شرح\n⋄︙قناة السورس [ضغط هنا](t.me/YYYDR)') 

end

if text == 'معلومات السيرفر 📊' and SudoBot(msg) then 

send(msg.chat_id_, msg.id_, io.popen([[

linux_version=`lsb_release -ds`

memUsedPrc=`free -m | awk 'NR==2{printf "%sMB/%sMB {%.2f%}\n", $3,$2,$3*100/$2 }'`

HardDisk=`df -lh | awk '{if ($6 == "/") { print $3"/"$2" ~ {"$5"}" }}'`

CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`

uptime=`uptime | awk -F'( |,|:)+' '{if ($7=="min") m=$6; else {if ($7~/^day/) {d=$6;h=$8;m=$9} else {h=$6;m=$7}}} {print d+0,"days,",h+0,"hours,",m+0,"minutes."}'`

echo '📟┋•⊱ { نظام التشغيل } ⊰•\n*»» '"$linux_version"'*' 

echo '*———————————~*\n📊|☆ { الذاكره العشوائيه } ☆\n*»» '"$memUsedPrc"'*'
آخر
